- id: dog_cam_snapshot
  alias: Dog Camera Snapshot
  initial_state: on
  trigger:
    - trigger: mqtt
      topic: frigate/events
      id: frigate-event-dogcam
      payload: "dog_cam"
      value_template: '{{ value_json["after"]["camera"] }}'
      variables:
        after_zones: '{{ trigger.payload_json["after"]["entered_zones"] }}'
        before_zones: '{{ trigger.payload_json["before"]["entered_zones"] }}'
        camera: '{{ trigger.payload_json["after"]["camera"] }}'
        id: '{{ trigger.payload_json["after"]["id"] }}'
        label: '{{ trigger.payload_json["after"]["label"] }}'
  condition:
    - condition: or
      conditions:
        - condition: template
          value_template: "{{ trigger.payload_json['type'] == 'new' }}"
        - condition: template
          value_template: "{{ before_zones | length == 0 }}"
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.motion_alert
          state: "on"
        - condition: state
          entity_id: input_boolean.guest
          state: "off"
        - condition: state
          entity_id: group.presence
          state: "not_home"
    - condition: template
      value_template: >-
        {{ ["dcperson", "fpoverhead"]|select("in", trigger.payload_json["after"]["entered_zones"])|list|length > 0 }}
  actions:
    - action: telegram_bot.send_photo
      data:
        url: >-
          http://hass.sky.net:8123/api/frigate/notifications/{{ id }}/thumbnail.jpg
        caption: >
          {{ label | title }} detected by {{ camera | replace("_", " ") | title }}
        target: !secret tchatid1
    - delay: "00:00:30"
    - action: telegram_bot.send_video
      data:
        url: >-
          http://hass.sky.net:8123/api/frigate/notifications/{{ id }}/{{ camera }}/clip.mp4
        caption: >
          Video of detection from {{ camera | replace("_", " ") | title }}
        target: !secret tchatid1
  mode: single
  max_exceeded: silent
