# When battery gets low, send a notification 
# in telegram with an option to delay for 6 hours
- id: change_front_door_battery
  alias: Change Front Door Batteries
  initial_state: on
  trigger:
    platform: template
    value_template: >
      {% if states('zwave.lock_front_door') != 'ready' %}
        {{ False }}
      {% else %}
        {{ (states.zwave.lock_front_door.attributes.battery_level)|int < 40 }}
      {% endif %}
  condition:
    condition: state 
    entity_id: !secret personentity1
    state: 'home'
  action:
    - service: !secret telservice
      data_template:
        message: "Batteries in the front door lock are below 40%, time to change them!"
        data:
            inline_keyboard:
              - 'Batteries Changed:/removefdbatterykeyboard,Remind Me Later:/fdbatteryreminder'

# Telegram pieces to handle the callbacks
# If batteries are changed/reminder dismissed
- id: dismiss_fd_battery_reminder
  alias: Batteries Changed
  initial_state: on
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/removefdbatterykeyboard'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Battery reminder dismissed!'
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: '{{ trigger.event.data.message.message_id }}'
        chat_id: '{{ trigger.event.data.user_id }}'
        inline_keyboard: []

# If reminder is snoozed
- id: fd_battery_reminder
  alias: Remind Me Later
  initial_state: on
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/fdbatteryreminder'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Ok, I will remind you in 6 hours'
    - service: telegram_bot.edit_replymarkup
      data_template:
        message_id: '{{ trigger.event.data.message.message_id }}'
        chat_id: '{{ trigger.event.data.user_id }}'
        inline_keyboard: []
    - service: timer.start
      data:
        entity_id: timer.front_door_battery
        duration: '06:00:00'

# Snooze timer for the reminder
- id: battery_timer_done
  alias: Trigger FD Battery Reminder
  initial_state: on
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.front_door_battery
  action:
    - service: !secret telservice
      data_template:
        message: "Batteries in the front door lock are below 40%, time to change them!"
        data:
            inline_keyboard:
              - 'Batteries Changed:/removefdbatterykeyboard,Remind Me Later:/fdbatteryreminder'
